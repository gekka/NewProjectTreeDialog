<UserControl x:Class="Gekka.VisualStudio.Extention.NewProjectTreeDialog.View.CustomProjectTemplatesView"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gekka.VisualStudio.Extention.NewProjectTreeDialog"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">
   
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="b2v" />
        <local:InvertConverter x:Key="inv" />

        <BitmapImage UriSource="/NewProjectTreeDialog;component/Resources/Small.png" x:Key="icoSmall" />
        <BitmapImage UriSource="/NewProjectTreeDialog;component/Resources/Normal.png" x:Key="icoNormal"/>

        <DrawingBrush x:Key="icoSearch">
            <!-- VS2017 Image Library \ Search_x16.xaml -->
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,5.8335C16,9.0495 13.384,11.6665 10.167,11.6665 9.136,11.6665 8.144,11.3925 7.254,10.8675L2.561,15.5605C2.277,15.8435 1.9,16.0005 1.5,16.0005 1.1,16.0005 0.723000000000001,15.8435 0.439,15.5605 -0.146000000000001,14.9755 -0.146000000000001,14.0245 0.439,13.4395L5.133,8.7445C4.608,7.8555 4.333,6.8635 4.333,5.8335 4.333,2.6165 6.95,0.000500000000000611 10.167,0.000500000000000611 13.384,0.000500000000000611 16,2.6165 16,5.8335" />
                        <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M14,5.8335C14,7.9475 12.28,9.6665 10.167,9.6665 8.053,9.6665 6.333,7.9475 6.333,5.8335 6.333,3.7195 8.053,2.0005 10.167,2.0005 12.28,2.0005 14,3.7195 14,5.8335" />
                        <GeometryDrawing Brush="#FF424242" Geometry="F1M10.167,9.667C8.053,9.667 6.334,7.947 6.334,5.834 6.334,3.72 8.053,2 10.167,2 12.28,2 14,3.72 14,5.834 14,7.947 12.28,9.667 10.167,9.667 M10.167,1C7.502,1 5.334,3.168 5.334,5.834 5.334,6.985 5.755,8.03 6.431,8.862L1.147,14.146C0.951000000000001,14.342 0.951000000000001,14.658 1.147,14.854 1.244,14.951 1.372,15 1.5,15 1.628,15 1.756,14.951 1.854,14.854L7.138,9.569C7.969,10.245 9.015,10.667 10.167,10.667 12.832,10.667 15,8.499 15,5.834 15,3.168 12.832,1 10.167,1" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <Style x:Key="iconRadioButtonStyle" TargetType="{x:Type RadioButton}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="border" HorizontalAlignment="Left"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true" >
                            <ContentPresenter x:Name="contentPresenter" 
                                                  Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=BorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFF0E07f"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="orange"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="tg">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"
                    CornerRadius="5">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="#FFdfFFFF"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" TargetName="border" Value="White"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter Property="Background" TargetName="border" Value="LightGray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ItemsPanelTemplate x:Key="wrappanel">
            <WrapPanel Orientation="Vertical"
                                           Height="{Binding Path=ActualHeight,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ScrollContentPresenter}}}" 
                                     PreviewMouseWheel="lst_PreviewMouseWheel"     />
        </ItemsPanelTemplate>
        
        <Style TargetType="{x:Type ListBox}" x:Key="templatesListBoxStyle">

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsNormalList}" Value="false">
                    <Setter Property="ItemsPanel" Value="{StaticResource wrappanel}" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Visibility" Value="{Binding Path=IsVisible,Converter={StaticResource ResourceKey=b2v}}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate >
                                <Border x:Name="border" BorderThickness="2,0,0,0">
                                    <Grid >
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="20" />
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Image x:Name="img" Grid.Column="0" HorizontalAlignment="Left"
                                                           Source="{Binding Path=Template.SmallThumbnailImage}"/>

                                        <TextBlock Grid.Column="1" Text="{Binding Path=Template.Name}" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=TemplateWrapper.IsUserTemplate}" Value="true">
                                        <Setter TargetName="border" Property="BorderBrush" Value="Red" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=IsNormalList}" Value="true">
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Visibility" Value="{Binding Path=IsVisible,Converter={StaticResource ResourceKey=b2v}}" />
                                <Setter Property="Width" Value="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate >
                                <Border x:Name="border" BorderThickness="2,0,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Image x:Name="img" Grid.Column="0" Margin="0,0,5,0"
                                                           Source="{Binding Path=Template.MediumThumbnailImage}"/>

                                        <StackPanel Grid.Column="1">
                                            <TextBlock Text="{Binding Path=Template.Name}" VerticalAlignment="Center"/>
                                            <TextBlock  Text="{Binding Path=Template.Description}" TextWrapping="Wrap"/>
                                            <ItemsControl ItemsSource="{Binding Path=Tags}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Background="White" CornerRadius="5" BorderBrush="Gray" BorderThickness="1" Padding="2,0"
                                                                                Margin="0,0,5,0">
                                                            <TextBlock Text="{Binding Path=Value}" />
                                                        </Border>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>
                                    </Grid>
                                </Border>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=TemplateWrapper.IsUserTemplate}" Value="true">
                                        <Setter TargetName="border" Property="BorderBrush" Value="Red" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="listTopTemplate">
            <Grid FlowDirection="LeftToRight" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Filter:" VerticalAlignment="Center" Margin="0,0,20,0"/>

                    <Border BorderBrush="LightGray" BorderThickness="1">
                        <DockPanel>
                            <Rectangle DockPanel.Dock="Right" Width="16" Height="16" Fill="{StaticResource icoSearch}" />

                            <TextBox MinWidth="100" BorderThickness="0"
                                     Text="{Binding Path=SearchText,UpdateSourceTrigger=PropertyChanged}"
                                     Loaded="SearchTextBox_Loaded"/>
                        </DockPanel>
                    </Border>

                    <RadioButton x:Name="raSmall" ToolTip="SmallSize" VerticalAlignment="Center" Margin="5,0"
                                     Style="{StaticResource iconRadioButtonStyle}"
                                             IsChecked="{Binding Path=IsNormalList,Converter={StaticResource inv}}">
                        <Image Source="{StaticResource icoSmall}" StretchDirection="DownOnly" Stretch="None"  />
                    </RadioButton>

                    <RadioButton x:Name="raNormal" ToolTip="NormalSize" VerticalAlignment="Center" Margin="5,0"
                                     Style="{StaticResource iconRadioButtonStyle}"
                                             IsChecked="{Binding Path=IsNormalList}">
                        <Image Source="{StaticResource icoNormal}" StretchDirection="DownOnly" Stretch="None" />
                    </RadioButton>


                </StackPanel>
            </Grid>
        </DataTemplate>

    </UserControl.Resources>
    
    <Grid Grid.Row="0" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>

            <ColumnDefinition Width="Auto"/>

            <ColumnDefinition Width="3*"/>

            <ColumnDefinition Width="Auto"/>

            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <TreeView x:Name="trv" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch"
                  ItemsSource="{Binding Path=TreeNodes}" SelectedItemChanged="Trv_SelectedItemChanged" >
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <EventSetter Event="Loaded" Handler="TreeViewItem_Loaded" />
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded}" />
                    <Setter Property="Visibility" Value="{Binding Path=IsVisible,Converter={StaticResource b2v}}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsLastNode}" Value="false">
                            <Setter Property="ItemsSource" Value="{Binding Path=Items}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate>
                    <Grid>
                        <ContentPresenter Content="{Binding Path=Header}"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" 
                      ResizeBehavior="PreviousAndNext" ResizeDirection="Columns"/>


        <DockPanel Grid.Column="2" >
            <ContentPresenter Content="{Binding}"
                              ContentTemplate="{StaticResource listTopTemplate}"
                              DockPanel.Dock="Top"/>
            <Grid>
                <ListBox x:Name="lst" ItemsSource="{Binding ElementName=trv,Path=SelectedItem.FilteredItems}"
                         Style="{StaticResource templatesListBoxStyle}" 
                         SelectedValuePath="TemplateSource"
                         SelectedValue="{Binding Path=SelectedExtension,Mode=OneWayToSource}" >
                </ListBox>
            </Grid>
        </DockPanel>

        <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Stretch" 
                      ResizeBehavior="PreviousAndNext" ResizeDirection="Columns"/>
        
        <ScrollViewer Grid.Column="4" VerticalScrollBarVisibility="Auto" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  FlowDirection="LeftToRight">

            <ItemsControl Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ScrollContentPresenter}}"
                                  ItemsSource="{Binding Path=TagsView}">
                <ItemsControl.GroupStyle>
                    <GroupStyle  >
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="^" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=DataContext.TagSortCommand}" CommandParameter="{Binding Path=Name}"    />
                                    <TextBlock Text="{Binding Path=Name}" FontWeight="ExtraBold" />
                                    <Button Click="GroupAllCheck_Click" Tag="true">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Grid Background="Transparent">
                                                    <CheckBox IsChecked="true" IsHitTestVisible="False" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Button Click="GroupAllCheck_Click" Tag="false">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Grid Background="Transparent">
                                                    <CheckBox IsChecked="false" IsHitTestVisible="False" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ItemsControl.GroupStyle>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="true" 
                                   Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ScrollContentPresenter}}}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Content="{Binding Path=Value}" Margin="2,1"
                                      IsChecked="{Binding Path=Filter}"
                                      Template="{StaticResource tg}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
        </ScrollViewer>

    </Grid>


</UserControl>
